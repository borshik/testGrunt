$(document).ready(function(){
	var inputData = 	[[
						 [1, 1],
						 [2, 1],
						 [4, 1],
						 [6, 1],
						 [6, 1],
						 [8, 2],
						 [10, 2],
						 [12, 2],
						 [14, 3],
						 [16, 4]
						 // [18, 6],
						 // [18, 8],
						 // [18, 10],
						 // [20, 10],
						 // [22, 10],
						 // [24, 10],
						 // [26, 12],
						 // [28, 14],
						 // [30, 16],
						 // [30, 18],
						 // [30, 20],
						 // [32, 20],
						 // [34, 20],
						 // [36, 22],
						 // [36, 24],
						 // [40, 26],
						 // [42, 28],
						 // [44, 30],
						 // [46, 32],
						 // [48, 34],
						 // [50, 36],
						 // [52, 38],
						 // [52, 40],
						 // [54, 40],
						 // [56, 40],
						 // [58, 42],
						 // [60, 44],
						 // [62, 44],
						 // [64, 46],
						 // [66, 48],
						 // [68, 50],
						 // [70, 52],
						 // [72, 54],
						 // [74, 56],
						 // [74, 58],
						 // [74, 60],
						 // [74, 62],
						 // [74, 64],
						 // [76, 66],
						 // [76, 68],
						 // [76, 70],
						 // [78, 72],
						 // [78, 74],
						 // [80, 76],
						 // [80, 78],
						 // [82, 80],
						 // [82, 82],
						 // [82, 84],
						 // [80, 86],
						 // [80, 88],
						 // [80, 88],
						 // [82, 88],
						 // [84, 88],
						 // [86, 90],
						 // [86, 92],
						 // [90, 92],
						 // [92, 92],
						 // [94, 92],
						 // [96, 92],
						 // [96, 94],
						 // [96, 96],
						 // [104, 98],
						 // [102, 100],
						 // [100, 102],
						 // [106, 104],
						 // [106, 106],
						 // [104, 108],
						 // [102, 110],
						 // [100, 112],
						 // [100, 114]
						 ],
						[
						 [4, 6],
						 [4, 7],
						 [4, 9],
						 [4, 11],
						 [4, 11],
						 [5, 13],
						 [5, 15],
						 [5, 17],
						 [6, 19],
						 [7, 21]
						 // [9, 23],
						 // [11, 23],
						 // [13, 23],
						 // [13, 25],
						 // [13, 27],
						 // [13, 29],
						 // [15, 31],
						 // [17, 33],
						 // [19, 35],
						 // [21, 35],
						 // [23, 35],
						 // [23, 37],
						 // [23, 39],
						 // [25, 41],
						 // [27, 41],
						 // [29, 45],
						 // [31, 47],
						 // [33, 49],
						 // [35, 51],
						 // [37, 53],
						 // [39, 55],
						 // [41, 57],
						 // [43, 57],
						 // [43, 59],
						 // [43, 61],
						 // [45, 63],
						 // [47, 65],
						 // [47, 67],
						 // [49, 69],
						 // [51, 71],
						 // [53, 73],
						 // [55, 75],
						 // [57, 77],
						 // [59, 79],
						 // [61, 79],
						 // [63, 79],
						 // [65, 79],
						 // [67, 79],
						 // [69, 81],
						 // [71, 81],
						 // [73, 81],
						 // [75, 83],
						 // [77, 83],
						 // [79, 85],
						 // [81, 85],
						 // [83, 87],
						 // [85, 87],
						 // [87, 87],
						 // [89, 85],
						 // [91, 85],
						 // [91, 85],
						 // [91, 87],
						 // [91, 89],
						 // [93, 91],
						 // [95, 91],
						 // [95, 95],
						 // [95, 97],
						 // [95, 99],
						 // [95, 101],
						 // [97, 101],
						 // [99, 101],
						 // [101, 109],
						 // [103, 107],
						 // [105, 105],
						 // [107, 111],
						 // [109, 111],
						 // [111, 109],
						 // [113, 107],
						 // [115, 105],
						 // [117, 105]
						 ]];										// массив с массивом массивов ))

// 	[	a,	[	b	,	[c]	]	,	[	[x,y]	,	[x,y]	]	]	список объектов
// 		a,															объект с со списками параметров
// 				b,													элемент списков параметров
//						 c											список параметров. количество списков для каждого объекта разное и зависит от количеств секунд жизни каждого объекта отдельно
//										 x,							в положении х
//										   y						в положении у
//			]
// 		]
// 	]
	var itemLife = [];												// продолжительность жизни каждого объекта равна количеству параметров
	var interval;													// непонятная хрень для того чтобы прервать сетинтервал
	var startPositionX = 0;											// начальная позиция ползунка
	var endPositionX = 600;											// конечная позиция ползунка
	var startPos = startPositionX;									// вспомогательная переменная для сдвига ползунка на один шаг и определения момента когда ползунок достиг конечной позиции и необходимо остновить его движение
	var timeShow;													// в эту переменную записывается время отображения
	var x;															// и так понятно )
	var y;															// и так понятно )
	var elem;														// объект
	var totalTime;													// максимальное время проигрывания слайдера


	// вычисление максимальной продолжительности жизни объектов
	function getMaxTime(itemLife){
		totalTime = itemLife[0];									// тотал тайм равен первому элементу в массиве итемлайф
		for (var i = 0; i < itemLife.length; i++) {					// цикл выполняется столько раз сколько элементов в массиве итемлайф
			if (totalTime < itemLife[i]) {							// если значение тотал тайм меньше значения следующего элемента в массиве
				totalTime = itemLife[i];							// то значение тотал тайм равно значению этого элемента
			};
		};
		return totalTime;											// записываем результат в переменную тотал тайм
	};


	// позиция объекта в определенный момент времени
	function itemPosition(i,t){										// i - объект, t - время
		elem.each(function(){										// во время цикла для каждого объекта будет выполнятся вложенный код
			x = inputData[i][t][0] + 'px';							// положение объекта по оси х
			y = inputData[i][t][1] + 'px';							// положение объекта по оси у
			$(this).css({'left': x,'top': y});						// this - объекту прописывается положение по иксу и по игреку
		});
	};


	// функция вычисления времени для отображения
	function showTime(){
		var minutes = (totalTime-totalTime%60)/60;					//
		var seconds = totalTime%60;									//
		if((seconds+'').length == 1){
			seconds = '0' + seconds;
		};
		if((minutes+'').length == 1){
			minutes = '0' + minutes;
		};
		var timeShow = minutes + "." + seconds;						//
		$('.time').text(timeShow);									//
	};


	// создание элементов
	function addElem(item){
		elem = $('<div class="elem"></div>');						// создать элемент визуализации
		$('.visual').prepend(elem);									// создать визуализацию для каждого объекта
		var clasame = 'item' + (item + 1);							// формируем название классов для каждого объекта
		elem.addClass(clasame);										// добавляем классы для каждого объекта свой класс для стилизации
	};


	// начальные данные для сброса
	function sliderBegin(){
		$('.elem').remove();										// удаляем все объекты созданные перед этим
		for ( var item = 0; item < inputData.length; item++){		// перебираем объекты для которых будет выполняться функция
			addElem(item);											// запускаем функцию создания элементов
			itemLife.push(inputData[item].length)					// добавляем количество секунд жизни для каждого объекта в массив itemLife
			itemPosition(item,0);									// ставим перебранные объекты в нулевой секунде в начальные положения
		};
		totalTime = getMaxTime(itemLife);							// записываем в переменную результат выполнения функции вычисленя максимальной продолжительности
		showTime();													// запускаем функцию отображения времени
		$('.position').css({'left': '0px'});						// помещаем ползунок в начало
		$('.pause').addClass('hide');								// прячем кнопку паузы
		$('.replay').addClass('hide');								// прячем кнопку реплея
	};


	sliderBegin();													// запускаем функцию сброса на начальные данные чтоб расположить элементы в начальные позиции
	var timeLife = totalTime;										// вспомогательная переменная равна значению тотал тайма
	var k = endPositionX/totalTime;									// коэффициент обозначающий с каким шагом будет двигаться ползунок слайдера


	// функция при запуске которой начнется воспроизведение
	function start() {
		totalTime = totalTime-1;									//
		interval = setInterval(function() {							//
			$('.elem').remove();									// создать визуализацию для каждого объекта
			startPositionX++;										//
			startPos = startPos+k;
			$('.position').css({'left': startPos + 'px'});			//
			showTime();
			totalTime--;											//
			//alert(timeLife);
			for ( var item = 0; item < inputData.length; item++){
				addElem(item);
				for( var time = 0; time < timeLife; time++){		// перебираем каждую секунду для каждого объекта
					if (time === startPositionX){
						itemPosition(item,time);
						console.log('сейчас объект под номером ' + (item + 1) + ' находится в координатах ' + 'x =  ' + x + '; y =  ' + y);
					};
				};
			};
			$('.play').addClass('hide');							//
			$('.pause').removeClass('hide');						//

			if(startPos === endPositionX) {							//
				clearInterval(interval);							//
				startPos = 0;										//
				startPositionX = 0;									//
				$('.pause').addClass('hide');						//
				$('.replay').removeClass('hide');					//
				$('.replay').on('click', replay);					// при клике на кнопку плей запускается функция старт
			};
		}, 1000)													//
	};

	// функция при запуске которой запускается функция стоп а затем функция старт
	function replay(){
		stop();
		$('.play').text('play');									//
		start();
	};

	// функция при запуске которой воспроизведение ставится на паузу
	function pause() {
		clearInterval(interval);									//
		$('.pause').addClass('hide');								//
		$('.play').removeClass('hide');								//
	};

	// функция при запуске которой воспроизведение останавливается и все возвращается в начало
	function stop() {
		clearInterval(interval);									//
		sliderBegin();												//
		startPositionX = 0;											//
		startPos = 0;												//
		$('.pause').addClass('hide');								//
		$('.replay').addClass('hide');							//
		$('.play').removeClass('hide');								//
	};

	$('.play').on('click', start);									// при клике на кнопку плей запускается функция старт
	$('.stop').on('click', stop);									// при клике на кнопку стоп запускается функция стоп
	$('.pause').on('click', pause);									// при клике на кнопку пауза запускается функция пауза
});